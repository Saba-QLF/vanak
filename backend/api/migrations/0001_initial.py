# Generated by Django 4.2.19 on 2025-03-09 09:06

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Devicenamebuffer",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("name", models.CharField(max_length=255, unique=True)),
            ],
            options={
                "db_table": "devicenamebuffer",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Devices",
            fields=[
                (
                    "id",
                    models.AutoField(db_column="ID", primary_key=True, serialize=False),
                ),
                (
                    "batchid",
                    models.IntegerField(blank=True, db_column="BatchID", null=True),
                ),
                (
                    "testdevice",
                    models.CharField(
                        blank=True, db_column="TestDevice", max_length=255, null=True
                    ),
                ),
                (
                    "samplename",
                    models.CharField(
                        blank=True, db_column="SampleName", max_length=255, null=True
                    ),
                ),
                (
                    "sampleweight",
                    models.IntegerField(
                        blank=True, db_column="SampleWeight", null=True
                    ),
                ),
                (
                    "coliformcount",
                    models.CharField(
                        blank=True, db_column="ColiformCount", max_length=255, null=True
                    ),
                ),
                (
                    "ecolicount",
                    models.CharField(
                        blank=True, db_column="EColiCount", max_length=255, null=True
                    ),
                ),
                (
                    "moldyeastcount",
                    models.CharField(
                        blank=True,
                        db_column="MoldYeastCount",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "coldcount",
                    models.CharField(
                        blank=True, db_column="ColdCount", max_length=255, null=True
                    ),
                ),
            ],
            options={
                "db_table": "devices",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="DevicesRecordsinfo",
            fields=[
                (
                    "batchid",
                    models.AutoField(
                        db_column="BatchID", primary_key=True, serialize=False
                    ),
                ),
                (
                    "fullname",
                    models.CharField(
                        blank=True, db_column="FullName", max_length=255, null=True
                    ),
                ),
                (
                    "date",
                    models.CharField(
                        blank=True, db_column="Date", max_length=10, null=True
                    ),
                ),
                (
                    "countperbatch",
                    models.IntegerField(
                        blank=True, db_column="CountPerBatch", null=True
                    ),
                ),
            ],
            options={
                "db_table": "devices_recordsinfo",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Inputcream",
            fields=[
                (
                    "id",
                    models.AutoField(db_column="ID", primary_key=True, serialize=False),
                ),
                (
                    "batchid",
                    models.IntegerField(blank=True, db_column="BatchID", null=True),
                ),
                ("supplier", models.CharField(db_column="Supplier", max_length=255)),
                ("ph", models.FloatField(blank=True, db_column="PH", null=True)),
                ("acid", models.FloatField(blank=True, db_column="Acid", null=True)),
                ("fat", models.FloatField(blank=True, db_column="Fat", null=True)),
                ("snf", models.FloatField(blank=True, db_column="SNF", null=True)),
                ("weight", models.FloatField(db_column="Weight")),
            ],
            options={
                "db_table": "inputcream",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="InputcreamRecordsinfo",
            fields=[
                (
                    "batchid",
                    models.AutoField(
                        db_column="BatchID", primary_key=True, serialize=False
                    ),
                ),
                (
                    "fullname",
                    models.CharField(
                        blank=True, db_column="FullName", max_length=255, null=True
                    ),
                ),
                (
                    "date",
                    models.CharField(
                        blank=True, db_column="Date", max_length=10, null=True
                    ),
                ),
                (
                    "countperbatch",
                    models.IntegerField(
                        blank=True, db_column="CountPerBatch", null=True
                    ),
                ),
            ],
            options={
                "db_table": "inputcream_recordsinfo",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Outputmilk",
            fields=[
                (
                    "id",
                    models.AutoField(db_column="ID", primary_key=True, serialize=False),
                ),
                ("batchid", models.IntegerField(db_column="BatchID")),
                ("supplier", models.CharField(db_column="Supplier", max_length=255)),
                ("ph", models.FloatField(blank=True, db_column="PH", null=True)),
                ("acid", models.FloatField(blank=True, db_column="Acid", null=True)),
                ("fat", models.FloatField(blank=True, db_column="Fat", null=True)),
                ("snf", models.FloatField(blank=True, db_column="SNF", null=True)),
                ("weight", models.FloatField(db_column="Weight")),
            ],
            options={
                "db_table": "outputmilk",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="OutputmilkRecordsinfo",
            fields=[
                (
                    "batchid",
                    models.AutoField(
                        db_column="BatchID", primary_key=True, serialize=False
                    ),
                ),
                (
                    "fullname",
                    models.CharField(
                        blank=True, db_column="FullName", max_length=255, null=True
                    ),
                ),
                (
                    "date",
                    models.CharField(
                        blank=True, db_column="Date", max_length=10, null=True
                    ),
                ),
                (
                    "countperbatch",
                    models.IntegerField(
                        blank=True, db_column="CountPerBatch", null=True
                    ),
                ),
            ],
            options={
                "db_table": "outputmilk_recordsinfo",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Processreport",
            fields=[
                (
                    "id",
                    models.AutoField(db_column="ID", primary_key=True, serialize=False),
                ),
                ("batchid", models.IntegerField(db_column="BatchID")),
                (
                    "color",
                    models.CharField(
                        blank=True, db_column="Color", max_length=50, null=True
                    ),
                ),
                (
                    "palletnumber",
                    models.IntegerField(
                        blank=True, db_column="PalletNumber", null=True
                    ),
                ),
                (
                    "supplier",
                    models.CharField(
                        blank=True, db_column="Supplier", max_length=255, null=True
                    ),
                ),
                (
                    "fatbutter",
                    models.FloatField(blank=True, db_column="FatButter", null=True),
                ),
                (
                    "tanknumber",
                    models.IntegerField(blank=True, db_column="TankNumber", null=True),
                ),
                (
                    "acidbutter",
                    models.FloatField(blank=True, db_column="AcidButter", null=True),
                ),
                (
                    "snfbuttermilk",
                    models.FloatField(blank=True, db_column="SNFButtermilk", null=True),
                ),
                (
                    "fatbuttermilk",
                    models.FloatField(blank=True, db_column="FatButtermilk", null=True),
                ),
                (
                    "acidbuttermilk",
                    models.FloatField(
                        blank=True, db_column="AcidButtermilk", null=True
                    ),
                ),
                (
                    "phbuttermilk",
                    models.FloatField(blank=True, db_column="PHButtermilk", null=True),
                ),
            ],
            options={
                "db_table": "processreport",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="ProcessreportRecordsinfo",
            fields=[
                (
                    "batchid",
                    models.AutoField(
                        db_column="BatchID", primary_key=True, serialize=False
                    ),
                ),
                (
                    "fullname",
                    models.CharField(
                        blank=True, db_column="FullName", max_length=255, null=True
                    ),
                ),
                (
                    "date",
                    models.CharField(
                        blank=True, db_column="Date", max_length=10, null=True
                    ),
                ),
                (
                    "countperbatch",
                    models.IntegerField(
                        blank=True, db_column="CountPerBatch", null=True
                    ),
                ),
            ],
            options={
                "db_table": "processreport_recordsinfo",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Suppliernames",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("name", models.CharField(max_length=255, unique=True)),
                ("code", models.CharField(max_length=255, unique=True)),
            ],
            options={
                "db_table": "suppliernames",
                "managed": False,
            },
        ),
    ]
